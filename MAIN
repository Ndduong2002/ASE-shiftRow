#include <stdio.h>
#include <stdint.h>

uint32_t W[512];
uint32_t P[512];
uint32_t Q[512];

void hc128(unsigned char* key, unsigned char* iv, unsigned char* output, size_t outputlen) {
    int i;
    unsigned char keystream[4];
    size_t idx = 0;
    
    // Cài đặt khóa
    for (i = 0; i < 16; i++) {
        W[i] = (key[i * 4] << 24) | (key[i * 4 + 1] << 16) | (key[i * 4 + 2] << 8) | key[i * 4 + 3];
    }
    for (i = 16; i < 128; i++) {
        W[i] = (f2(W[i - 2]) + W[i - 7] + f1(W[i - 15]) + W[i - 16] + i) % 4294967296;
    }

    // Cài đặt IV
    for (i = 0; i < 16; i++) {
        W[i + 128] = (iv[i * 4] << 24) | (iv[i * 4 + 1] << 16) | (iv[i * 4 + 2] << 8) | iv[i * 4 + 3];
    }
    for (i = 16; i < 256; i++) {
        W[i + 128] = (f2(W[i - 2 + 128]) + W[i - 7 + 128] + f1(W[i - 15 + 128]) + W[i - 16 + 128] + i) % 4294967296;
    }

    for (i = 0; i < 512; i++) {
        P[i] = W[i + 256];
        Q[i] = W[i + 256 + 256];
    }

    // Mã hóa/Giải mã
    while (outputlen > 0) {
        if (idx == 0) {
            for (i = 0; i < 512; i++) {
                W[i] = (f2(W[i - 2]) + W[i - 7] + f1(W[i - 15]) + W[i - 16] + i) % 4294967296;
            }
            for (i = 0; i < 512; i++) {
                P[i] = W[i + 256];
                Q[i] = W[i + 256 + 256];
            }
        }
        
        keystream[0] = Q[P[P[P[idx % 512]]] ^ Q[Q[Q[(idx + 3) % 512]]]] ^ (W[(idx + 416) % 512] & 0xff);
        
        output[idx % 4] = keystream[0];

        idx++;
        outputlen--;

    }
}

int main() {
    unsigned char key[16] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f};
    unsigned char iv[16] = {0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1a, 0x1b, 0x1c, 0x1d, 0x1e, 0x1f};
    unsigned char output[16];

    hc128(key, iv, output, sizeof(output));

    for (int i = 0; i < sizeof(output); i++) {
        printf("%02x ", output[i]);
    }

    printf("\n");
    
    return 0;
}
